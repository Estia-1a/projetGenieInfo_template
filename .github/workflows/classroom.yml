name: Autograding Tests
on:
  repository_dispatch:
permissions:
  checks: write
  actions: read
  contents: write
  pull-requests: write
env:
  PUBLIC_URL: https://github.com/Estia-1a/projetGenieInfo_public/archive/refs/heads/release/evaluator.zip
jobs:
  run-autograding-tests:
    runs-on: ubuntu-latest
    if: github.actor != 'github-classroom[bot]'
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Create cache file
        run: |
          mkdir ${{ runner.workspace }}/check-SHA
          echo ${{ github.sha }} > ${{ runner.workspace }}/check-SHA/github-sha.txt
      - name: Check SHA
        id: check_sha
        uses: actions/cache@v4
        with:
          path: ${{ runner.workspace }}/check-SHA
          key: check-SHA-${{ github.sha }}
      - name: abort
        id: abort
        if: steps.check_sha.outputs.cache-hit == 'true'
        run: |
          echo ::notice:: No modifications since last evaluation
          exit 1
      - name: Cache Libraries
        id: cache-libraries
        uses: actions/cache@v4
        with:
          path: |
            ${{ runner.workspace }}/public
            ${{ runner.workspace }}/lib/estia_image
            ${{ runner.workspace }}/lib/getopt
            ${{ runner.workspace }}/lib/image_comparator
          key: public-evaluator2
      - if: steps.cache-libraries.outputs.cache-hit != 'true'
        name: download lib and cmake config
        run: |
          wget $PUBLIC_URL -O public.zip
          unzip public.zip
          mv projetGenieInfo_public-release-evaluator ${{ runner.workspace }}/public
      - if: steps.cache-libraries.outputs.cache-hit != 'true'
        name: Build Estia-image Lib
        uses: Estia-1a/action-cmake-build@master
        with:
          source-dir: ${{ runner.workspace }}/public/estia-image
          build-dir: ${{ runner.workspace }}/public/estia-image/build
          configure-options: -DINSTALL_DESTINATION=${{ runner.workspace }}/lib/estia_image
          install-build: true
      - if: steps.cache-libraries.outputs.cache-hit != 'true'
        name: Build getopt Lib
        uses: Estia-1a/action-cmake-build@master
        with:
          source-dir: ${{ runner.workspace }}/public/getopt
          build-dir: ${{ runner.workspace }}/public/getopt/build
          configure-options: -DINSTALL_DESTINATION=${{ runner.workspace }}/lib/getopt
          install-build: true
      - if: steps.cache-libraries.outputs.cache-hit != 'true'
        name: Build image comparator
        uses: Estia-1a/action-cmake-build@master
        with:
          source-dir: ${{ runner.workspace }}/public/image-comparator
          build-dir: ${{ runner.workspace }}/public/image-comparator/build
          configure-options: -DESTIA_IMAGE_PATH=${{ runner.workspace }}/lib/estia_image -DINSTALL_DESTINATION=${{ runner.workspace }}/lib/image_comparator
          install-build: true
      - name: Copy the CMakeLists.txt
        run: |
          cp -f  ${{ runner.workspace }}/public/CMake/CMakeLists.txt $GITHUB_WORKSPACE/CMakeLists.txt
        # Build student code
      - name: Get timestamp
        run: |
          echo "RELEASE_DATE=$(date +'%m%d-%H%M%S')" >> ${GITHUB_ENV}
      - name: Build
        id: buildFreud
        uses: Estia-1a/action-cmake-build@master
        with:
          build-dir: ${{ runner.workspace }}/build
          configure-options: -DESTIA_IMAGE_PATH=${{ runner.workspace }}/lib/estia_image -DGETOPT_PATH=${{ runner.workspace }}/lib/getopt
          install-build: true
          log-dir: ${{ github.workspace }}/result/${{env.RELEASE_DATE}}
          save-log: true
      - name: Run tests
        id: runTests
        uses: Estia-1a/projetGenieInfo_public/actions/evaluator@release/evaluator-2024  
        with:
          buildDirectory: ./dist/
          testsDirectory: ${{ runner.workspace }}/public/images
          comparatorPath: ${{ runner.workspace }}/lib/image_comparator/image-comparator

      - name: Autograding Reporter
        uses: classroom-resources/autograding-grading-reporter@v1
        env: 
          RUNTESTS_RESULTS: "${{ steps.runTests.outputs.result || 0}}"
        with:
          runners: runTests
      - name: Summary
        run: |
          echo "${{steps.runTests.outputs.markdown}}" > $GITHUB_STEP_SUMMARY
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
            add-paths: result
            commit-message: Automatic Evaluation ${{steps.runTests.outputs.grade}} on ${{steps.runTests.outputs.date}}
            branch: Evaluation/Daily
            branch-suffix: timestamp
            delete-branch: true
            title: Daily Evaluation ${{steps.runTests.outputs.grade}} on ${{steps.runTests.outputs.date}}
            body: ${{steps.runTests.outputs.markdown}}
      - name: Get error message 
        id: errorMessage 
        if: ${{ failure() && steps.buildFreud.conclusion == 'failure' }}
        run : |
          echo "# Compilation Failed"> $GITHUB_STEP_SUMMARY
          echo "## make output"          >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`markdown"  >> $GITHUB_STEP_SUMMARY
          cat ${{ github.workspace }}/result/${{env.RELEASE_DATE}}/stderr.log  >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`"  >> $GITHUB_STEP_SUMMARY
          MESSAGE=$(cat $GITHUB_STEP_SUMMARY) 
          MESSAGE="${MESSAGE//'%'/'%25'}"
          MESSAGE="${MESSAGE//$'\n'/'%0A'}"
          MESSAGE="${MESSAGE//$'\r'/'%0D'}"
          echo "::set-output name=content::$MESSAGE"
      - name: Create Pull Request
        if: ${{ failure() && steps.buildFreud.conclusion == 'failure' }}
        uses: peter-evans/create-pull-request@v6
        with:
            add-paths: result
            commit-message: Compilation failed on ${{env.RELEASE_DATE}}
            branch: Evaluation/Daily
            branch-suffix: timestamp
            delete-branch: true
            title: Daily Evaluation failed ${{env.RELEASE_DATE}}
            body: ${{steps.errorMessage.outputs.content}}
      - name: handle no modification
        if: ${{ failure() && steps.abort.conclusion == 'failure' }}
        run: |
          echo "# No evaluation needed" > $GITHUB_STEP_SUMMARY
          exit 0
        continue-on-error: true

